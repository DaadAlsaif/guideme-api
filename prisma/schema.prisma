generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Tourist {
  tourist_id   String        @id @default(auto()) @map("_id") @db.ObjectId
  email        String        @unique
  name         String?
  password     String
  phone        String?
  country      String?

  reservations Reservation[]
  my_reviews   Review[]

  @@map("tourits")
}

//------------------------------
model Tourguide {
  tourguide_id  String        @id @default(auto()) @map("_id") @db.ObjectId
  email         String        @unique
  name          String?
  password      String
  phone         String?
  languages     Languages[]
  experience    String?
  city          String?
  price         String?
  reservations  Reservation[]
  given_reviews Review[]


  @@map("tourguides")
}

enum Role {
  tourguide
  tourist
}

enum Languages {
  Arabic
  English
  French
  Spanish
  Turkish

}

//---------------------------------
model Reservation {
  booking_id     String      @id @default(auto()) @map("_id") @db.ObjectId
  booking_status Status      @default(pending)
  payment        BookPayment
  date           DateTime
  created_at     DateTime?   @default(now())
  tourist_id     String     @db.ObjectId
  tourist        Tourist    @relation(fields: [tourist_id], references: [tourist_id])
  tourguide      Tourguide?  @relation(fields: [tourguide_id], references: [tourguide_id])
  tourguide_id   String ?   @db.ObjectId

  @@map("reservations")
}

enum Status {
  pending
  accepted
  rejected
}

enum BookPayment {
  cash
  card
  voucher
}

model Review {
  review_id    String    @id @default(auto()) @map("_id") @db.ObjectId
  rate         Rate
  created_at   DateTime  @default(now())
  tourist_id   String    @db.ObjectId
  tourist      Tourist   @relation(fields: [tourist_id], references: [tourist_id])
  tourguide    Tourguide @relation(fields: [tourguide_id], references: [tourguide_id])
  tourguide_id String    @db.ObjectId
}

enum Rate {
  poor
  good
  veryGood
  excellent
}
model Task {
  task_id    String  @id @default(auto()) @map("_id") @db.ObjectId
  input      String
  is_checked Boolean
}
